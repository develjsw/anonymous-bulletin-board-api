generator client {
  provider = "prisma-client-js"
  output   = "../../prisma/generated/master-client"
}

datasource db {
  provider = "mysql"
  url      = env("MASTER_DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model comments {
  comment_id     BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  post_id        BigInt     @db.UnsignedBigInt
  parent_id      BigInt?    @db.UnsignedBigInt
  writer         String     @default("") @db.VarChar(50)
  content        String     @default("") @db.VarChar(200)
  created_at     DateTime   @default(now()) @db.DateTime(0)
  posts          posts      @relation(fields: [post_id], references: [post_id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  comments       comments?  @relation("commentsTocomments", fields: [parent_id], references: [comment_id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")
  other_comments comments[] @relation("commentsTocomments")

  @@index([parent_id], map: "parent_id")
  @@index([post_id], map: "post_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model keyword_alerts {
  keyword_alert_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  writer           String @default("") @db.VarChar(50)
  keyword          String @default("") @db.VarChar(100)

  @@unique([writer, keyword], map: "uq_writer_keyword")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model posts {
  post_id       BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  title         String     @default("") @db.VarChar(100)
  content       String     @db.Text
  writer        String     @default("") @db.VarChar(50)
  password_hash String     @default("") @db.VarChar(255)
  created_at    DateTime   @default(now()) @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.DateTime(0)
  comments      comments[]

  @@index([title], map: "idx_title")
  @@index([writer], map: "idx_writer")
}
